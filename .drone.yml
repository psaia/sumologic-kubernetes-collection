---
kind: pipeline
type: docker
name: dev

concurrency:
  limit: 1

# for ~/.vault-token to be usable
workspace:
  path: /root

steps:
  - name: format
    image: hashicorp/terraform:0.12.26
    commands:
      - terraform fmt -list -diff -recursive terraform

  - name: push-commit
    image: appleboy/drone-git-push:0.2.1
    settings:
      remote_name: origin
      branch: ${DRONE_SOURCE_BRANCH}
      commit: true
      commit_message: "Format terraform files"

  - name: vault-login
    image: vault:0.9.0
    commands:
    - vault write -field=token auth/nytimes/dv-sumologic/approle/login role_id=$ROLE_ID secret_id=$SECRET_ID > ~/.vault-token
    environment:
      ROLE_ID: 6eff16a2-27e3-f7b1-7ff2-f8368c56d54d # auth/nytimes/dv-sumologic/approle/role/sumo-drone-pipeline/role-id
      SECRET_ID:
        from_secret: VAULT_SECRET_ID  # auth/nytimes/dv-sumologic/approle/role/drone/secret-id
      VAULT_ADDR: https://vault-prd.dv.nyt.net

  - name: plan
    image: jmccann/drone-terraform:6.3-0.12.20
    settings:
      tf_version: 0.12.26
      root_dir: terraform
      actions:
        - validate
        - plan
      init_options:
        lock-timeout: 5m
        backend-config:
           - "bucket=remote-state"
           - "prefix=nytimes/dv-sumologic-test"
      vars:
        default_role: "2FA - SumoLogic (Test)"
        ad_domain: ent.nytint.com
        ad_url: ldap://AWSE-EPW-CDC04.ENT.NYTINT.COM:389
        ad_user: corp-svc-sumo-auto
        env: test
    environment:
      AD_PASSWORD:
        from_secret: ad_password
      SUMOLOGIC_ACCESSID:
        from_secret: test_access_id
      SUMOLOGIC_ACCESSKEY:
        from_secret: test_access_key
      SUMOLOGIC_ENVIRONMENT: us2
      GOOGLE_CREDENTIALS:
        from_secret: GOOGLE_CREDENTIALS
      VAULT_ADDR: https://vault-prd.dv.nyt.net
    when:
      event:
        - push
        - pull_request
      branch:
        - main
        - test
        - feature/*

  - name: apply
    image: jmccann/drone-terraform:6.3-0.12.20
    settings:
      tf_version: 0.12.26
      root_dir: terraform
      actions:
        - apply
      init_options:
        lock-timeout: 5m
        backend-config:
           - "bucket=remote-state"
           - "prefix=nytimes/dv-sumologic-test"
      vars:
        default_role: "2FA - SumoLogic (Test)"
        ad_domain: ent.nytint.com
        ad_url: ldap://AWSE-EPW-CDC04.ENT.NYTINT.COM:389
        ad_user: corp-svc-sumo-auto
        env: test
    environment:
      AD_PASSWORD:
        from_secret: ad_password
      SUMOLOGIC_ACCESSID:
        from_secret: test_access_id
      SUMOLOGIC_ACCESSKEY:
        from_secret: test_access_key
      SUMOLOGIC_ENVIRONMENT: us2
      GOOGLE_CREDENTIALS:
        from_secret: GOOGLE_CREDENTIALS
      VAULT_ADDR: https://vault-prd.dv.nyt.net
    when:
      event:
        - push
      branch:
        - main
        - test

  - name: slack
    image: plugins/slack
    settings:
      channel: dv-notifications
      username: nytimes/dv-sumologic (Dev)
      template: >
        <@observability-team>
        dev deployment failed! {{build.link}} ({{build.branch}})
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      status:
        - failure
      event:
        - push
      branch:
        - main
        - test

---
kind: pipeline
type: docker
name: prd

concurrency:
  limit: 1

# for ~/.vault-token to be usable
workspace:
  path: /root

depends_on:
  - dev

steps:
  - name: vault-login
    image: vault:0.9.0
    commands:
    - vault write -field=token auth/nytimes/dv-sumologic/approle/login role_id=$ROLE_ID secret_id=$SECRET_ID > ~/.vault-token
    environment:
      ROLE_ID: 6eff16a2-27e3-f7b1-7ff2-f8368c56d54d # auth/nytimes/dv-sumologic/approle/role/sumo-drone-pipeline/role-id
      SECRET_ID:
        from_secret: VAULT_SECRET_ID  # auth/nytimes/dv-sumologic/approle/role/drone/secret-id
      VAULT_ADDR: https://vault-prd.dv.nyt.net

  - name: plan
    image: jmccann/drone-terraform:6.3-0.12.20
    settings:
      tf_version: 0.12.26
      root_dir: terraform
      actions:
        - validate
        - plan
      init_options:
        lock-timeout: 5m
        backend-config:
          - "bucket=remote-state"
          - "prefix=nytimes/dv-sumologic"
      vars:
        default_role: "2FA - SumoLogic"
        ad_domain: ent.nytint.com
        ad_url: ldap://AWSE-EPW-CDC04.ENT.NYTINT.COM:389
        ad_user: corp-svc-sumo-auto
        env: prd
    environment:
      AD_PASSWORD:
        from_secret: ad_password
      SUMOLOGIC_ACCESSID:
        from_secret: access_id
      SUMOLOGIC_ACCESSKEY:
        from_secret: access_key
      SUMOLOGIC_ENVIRONMENT: us1
      GOOGLE_CREDENTIALS:
        from_secret: GOOGLE_CREDENTIALS
      VAULT_ADDR: https://vault-prd.dv.nyt.net
    when:
      event:
        - push
        - pull_request
      branch:
        - main
        - test

  - name: apply
    image: jmccann/drone-terraform:6.3-0.12.20
    settings:
      tf_version: 0.12.26
      root_dir: terraform
      actions:
        - apply
      init_options:
        lock-timeout: 5m
        backend-config:
          - "bucket=remote-state"
          - "prefix=nytimes/dv-sumologic"
      vars:
        default_role: "2FA - SumoLogic"
        ad_domain: ent.nytint.com
        ad_url: ldap://AWSE-EPW-CDC04.ENT.NYTINT.COM:389
        ad_user: corp-svc-sumo-auto
        env: prd
    environment:
      AD_PASSWORD:
        from_secret: ad_password
      SUMOLOGIC_ACCESSID:
        from_secret: access_id
      SUMOLOGIC_ACCESSKEY:
        from_secret: access_key
      SUMOLOGIC_ENVIRONMENT: us1
      GOOGLE_CREDENTIALS:
        from_secret: GOOGLE_CREDENTIALS
      VAULT_ADDR: https://vault-prd.dv.nyt.net
    when:
      event:
        - push
      branch:
        - main

  - name: slack
    image: plugins/slack
    settings:
      channel: dv-notifications
      username: nytimes/dv-sumologic
      template: >
        <@observability-team>
        prd deployment failed! {{build.link}} ({{build.branch}})
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      status:
        - failure
      event:
        - push
      branch:
        - main

---
kind: pipeline
type: docker
name: add-user

trigger:
  event:
    - promote
  target:
    - add-user

steps:
  - name: log-env
    image: alpine:latest
    commands:
     - echo "Adding $email to $group..."

  - name: add-user-to-group
    image: golang:1.14
    environment:
      AD_GROUP_OUDN: "OU=SumoLogic RBAC,OU=2FA Objects,OU=NYTMG,DC=ent,DC=nytint,DC=com"
      AD_GROUP_PREFIX: "sumo"
      AD_PASS:
        from_secret: ad_password
      AD_URL: ldap://ad.prd.iad1.nyt.net:389
      AD_USER: corp-svc-sumo-auto@ent.nytint.com
      AD_USER_OUDN: "OU=NYTMG,DC=ent,DC=nytint,DC=com"
      GOPROXY: direct
      GOSUMDB: off
    commands:
      - cd tools/adutil
      - go get
      - go run main.go add --group $group --email $email
  - name: notify
    image: plugins/slack
    settings:
      channel: dv-observability
      username: nytimes/dv-sumologic
      template: >
        {{#success build.status}}
          Success: ${TRIGGER} added ${email} to the ${group} AD group.
        {{else}}
          Failure: ${TRIGGER} attempted to add ${email} to the ${group} AD group.
        {{/success}}
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      status:
        - success
        - failure

---
kind: pipeline
type: docker
name: del-user

trigger:
  event:
    - promote
  target:
    - del-user

steps:
  - name: log-env
    image: alpine:latest
    commands:
     - echo "Removing $email from $group..."

  - name: remove-user-from-group
    image: golang:1.14
    environment:
      AD_GROUP_OUDN: "OU=SumoLogic RBAC,OU=2FA Objects,OU=NYTMG,DC=ent,DC=nytint,DC=com"
      AD_GROUP_PREFIX: "sumo"
      AD_PASS:
        from_secret: ad_password
      AD_URL: ldap://ad.prd.iad1.nyt.net:389
      AD_USER: corp-svc-sumo-auto@ent.nytint.com
      AD_USER_OUDN: "OU=NYTMG,DC=ent,DC=nytint,DC=com"
      GOPROXY: direct
      GOSUMDB: off
    commands:
      - cd tools/adutil
      - go get
      - go run main.go remove --group $group --email $email
  - name: notify
    image: plugins/slack
    settings:
      channel: dv-observability
      username: nytimes/dv-sumologic
      template: >
        {{#success build.status}}
          Success: ${TRIGGER} removed ${email} from the ${group} AD group.
        {{else}}
          Failure: ${TRIGGER} attempted to remove ${email} from the ${group} AD group.
        {{/success}}
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    when:
      status:
        - success
        - failure

---
kind: signature
hmac: dbb71646eae986b6c27e804b3b1c92347b85894e16514bbdd80842b50df95238

...
